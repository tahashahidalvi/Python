logsBucket: gs://development-437521.appspot.com

steps:
  # Step 1: Build and push the first Docker image using Dockerfile.app1
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.app1', '-t', 'us-west4-docker.pkg.dev/development-437521/test-deployment/app1:latest', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-west4-docker.pkg.dev/development-437521/test-deployment/app1:latest']

  # Step 2: Build and push the second Docker image using Dockerfile.app2
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.app2', '-t', 'us-west4-docker.pkg.dev/development-437521/test-deployment/app2:latest', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-west4-docker.pkg.dev/development-437521/test-deployment/app2:latest']

  # Step 3: Restart all instances in the Managed Instance Group (MIG)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'instance-groups'
      - 'managed'
      - 'rolling-action'
      - 'restart'
      - 'instance-group-1-m7r1'  # Replace with your actual MIG name
      - '--zone=us-central1'  # Replace with your actual zone

# Define the images being built and pushed
images:
  - 'us-west4-docker.pkg.dev/development-437521/test-deployment/app1:latest'
  - 'us-west4-docker.pkg.dev/development-437521/test-deployment/app2:latest'
